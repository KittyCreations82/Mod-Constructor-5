using Constructor5.Base.ElementSystem;
using Constructor5.Base.ExportSystem.Tuning;
using Constructor5.Base.ExportSystem.Tuning.Utilities;
using Constructor5.Core;
using Constructor5.Elements.Traits;
using Constructor5.UI.AutoGeneratedEditors;

namespace Constructor5.Elements.Buffs.Components
{
    [XmlSerializerExtraType]
    [SharedWithTraits]
    [HasAutoEditor("TraitActionsNotice")]
    public class BuffLootComponent : BuffComponent
    {
        public override string ComponentLabel => "Actions";

        [AutoEditorReferenceList("LootActionSet", "BuffLootItem", ShowCreateButton = true)]
        public ReferenceList LootActionSets { get; set; } = new ReferenceList();

        protected internal override bool HasContent() => LootActionSets.HasItems();

        protected internal override void OnExport(BuffExportContext context)
        {
            foreach (var set in LootActionSets.GetOfType<BuffLootItem>())
            {
                if (set.RunOnInterval)
                {
                    TuneRunOnInterval(context, set);
                }

                if (set.RunOnInstance)
                {
                    context.Tuning.Get<TunableList>("_loot_on_instance").Set<TunableBasic>(null, set.Reference);
                }

                if (set.RunOnAddition)
                {
                    context.Tuning.Get<TunableList>("_loot_on_addition").Set<TunableBasic>(null, set.Reference);
                }

                if (set.RunOnRemoval)
                {
                    context.Tuning.Get<TunableList>("_loot_on_removal").Set<TunableBasic>(null, set.Reference);
                }
            }
        }

        private void TuneRunOnInterval(BuffExportContext context, BuffLootItem set)
            => TuneRunOnInterval(context, set.IntervalMin, set.IntervalMax, set.Reference);

        private void TuneRunOnInterval(BuffExportContext context, int intervalMin, int intervalMax, Reference reference)
            => BuffLootOnIntervalBuilder.AddToCommodity(context, intervalMin, intervalMax, reference);
    }
}