<UserControl x:Class="Constructor5.Elements.Buffs.BuffMiniEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:c="clr-namespace:Constructor5.UI.Shared;assembly=Constructor5.UI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Constructor5.Elements.Buffs"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             x:Name="uc"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">

    <c:SpacedStack>
        <StackPanel>
            <c:Field Label="Name" LabelWidth="100">
                <c:STBLStringControl Text="{Binding BuffInfoComponent.Name, ElementName=uc}" UpdateLabelForElement="{Binding}" />
            </c:Field>
            <c:Field Label="Description" LabelWidth="100">
                <c:STBLStringControl IsMultiLine="True" Text="{Binding BuffInfoComponent.Description, ElementName=uc}" />
            </c:Field>
            <c:Field Label="Icon" LabelWidth="100">
                <c:IconControl Icon="{Binding BuffInfoComponent.Icon, ElementName=uc}" />
            </c:Field>
        </StackPanel>

        <!--  Emotion  -->
        <StackPanel>
            <c:CheckBox Content="HasEmotion" IsChecked="{Binding BuffInfoComponent.HasEmotion, ElementName=uc}" />
            <StackPanel Visibility="{Binding BuffInfoComponent.HasEmotion, ElementName=uc, Converter={StaticResource BoolToVis}}">
                <c:Field Label="Emotion" LabelWidth="150">
                    <c:ReferenceControl ElementTypeName="Emotion"
                                        Reference="{Binding BuffInfoComponent.Emotion, ElementName=uc}"
                                        ResetTo="14640"
                                        ResetToLabel="Happy" />
                </c:Field>
                <c:Field Label="EmotionWeight" LabelWidth="150">
                    <xctk:IntegerUpDown Minimum="1" Text="{Binding BuffInfoComponent.EmotionWeight, ElementName=uc}" />
                </c:Field>
            </StackPanel>
        </StackPanel>

        <!--  Duration  -->
        <StackPanel x:Name="DurationPanel">
            <c:CheckBox Content="HasFixedDuration" IsChecked="{Binding BuffInfoComponent.HasFixedDuration, ElementName=uc}" />
            <StackPanel Visibility="{Binding BuffInfoComponent.HasFixedDuration, ElementName=uc, Converter={StaticResource BoolToVis}}">
                <c:Field Label="Duration" LabelWidth="150">
                    <xctk:IntegerUpDown Increment="60"
                                        Minimum="0"
                                        Text="{Binding BuffInfoComponent.Duration, ElementName=uc}" />
                </c:Field>
                <c:CheckBox IsChecked="{Binding BuffInfoComponent.AddEmotionCategory, ElementName=uc}">
                    <StackPanel>
                        <c:TextBlock Text="AddEmotionCategory" />
                        <c:TextBlock FontStyle="Italic"
                                     Text="AddEmotionCategoryHelp"
                                     TextWrapping="WrapWithOverflow" />
                    </StackPanel>
                    <c:CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BuffInfoComponent.HasEmotion, ElementName=uc}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </c:CheckBox.Style>
                </c:CheckBox>
                <c:CheckBox Content="IsNonPersistedWithDescription" IsChecked="{Binding BuffInfoComponent.IsNonPersisted, ElementName=uc}" />
            </StackPanel>
        </StackPanel>

        <!--  Hide Timeout  -->
        <StackPanel x:Name="HideTimeoutPanel" Visibility="Collapsed">
            <c:CheckBox Content="HideTimeout" IsChecked="{Binding BuffSpecialCasesComponent.HideTimeout, ElementName=uc}" />
        </StackPanel>

        <c:TextBlock Text="BuffMiniEditorOpenTabNotice" />
    </c:SpacedStack>
</UserControl>
